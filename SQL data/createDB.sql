DROP DATABASE IF EXISTS neighborChat;
CREATE DATABASE neighborChat;
USE neighborChat;
DROP TABLE IF EXISTS Users;
CREATE TABLE Users (
    uid INT(8) NOT NULL AUTO_INCREMENT,
    uname VARCHAR(50) UNIQUE NOT NULL,
	passwd VARCHAR(128) NOT NULL,
	email VARCHAR(50) NOT NULL,
    fName VARCHAR(50) NOT NULL,
    lName VARCHAR(50) NOT NULL,
    addr1 VARCHAR(50) DEFAULT NULL,
    addr2 VARCHAR(50) DEFAULT NULL,
    intro VARCHAR(50) DEFAULT NULL,
    photo VARCHAR(100) DEFAULT NULL,
    nRange INT(1) DEFAULT 2,
	lastLog TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	notify BOOL NOT NULL DEFAULT FALSE,
    PRIMARY KEY (uid));
DROP TABLE IF EXISTS Hoods;
CREATE TABLE Hoods (
    hid INT(8) NOT NULL AUTO_INCREMENT,
    hname VARCHAR(50) NOT NULL,
    SW VARCHAR(50) NOT NULL,
    NE VARCHAR(50) NOT NULL,
    PRIMARY KEY (hid));
DROP TABLE IF EXISTS Blocks;
CREATE TABLE Blocks (
    bid INT(8) NOT NULL AUTO_INCREMENT,
    bname VARCHAR(50) NOT NULL,
    hid INT(8) NOT NULL,
    SW VARCHAR(50) NOT NULL,
    NE VARCHAR(50) NOT NULL,
    PRIMARY KEY (bid),
    FOREIGN KEY (hid) REFERENCES Hoods (hid) ON DELETE CASCADE ON UPDATE CASCADE);
DROP TABLE IF EXISTS UserBlock;
CREATE TABLE UserBlock (
    uid INT(8) NOT NULL,
    ubTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	bid INT(8) NOT NULL,
	status BOOL DEFAULT TRUE,
    PRIMARY KEY (uid, ubTime),
    FOREIGN KEY (uid) REFERENCES Users (uid) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (bid) REFERENCES Blocks (bid) ON DELETE CASCADE ON UPDATE CASCADE);
DROP TABLE IF EXISTS BlockApplication;
CREATE TABLE BlockApplication (
    applicant INT(8) NOT NULL,
    baTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    bid INT(8) NOT NULL,
    txt VARCHAR(100) DEFAULT NULL,
    accepts INT DEFAULT 0,
    decisions INT DEFAULT 0,
    PRIMARY KEY (applicant, bid),
    FOREIGN KEY (applicant) REFERENCES Users (uid) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (bid) REFERENCES Blocks (bid) ON DELETE CASCADE ON UPDATE CASCADE);
DROP TABLE IF EXISTS Friends;
CREATE TABLE Friends (
    uidA INT(8) NOT NULL,
    uidB INT(8) NOT NULL,
    fTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (uidA, uidB),
    FOREIGN KEY (uidA) REFERENCES Users (uid) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (uidB) REFERENCES Users (uid) ON DELETE CASCADE ON UPDATE CASCADE);
DROP TABLE IF EXISTS FriendApplication;
CREATE TABLE FriendApplication (
    applicant INT(8) NOT NULL,
    recipient INT(8) NOT NULL,
    txt VARCHAR (100) DEFAULT NULL,
	faTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	decision int DEFAULT -1,
    PRIMARY KEY (applicant, recipient),
    FOREIGN KEY (applicant) REFERENCES Users (uid) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (recipient) REFERENCES Users (uid) ON DELETE CASCADE ON UPDATE CASCADE);
DROP TABLE IF EXISTS Neighbors;
CREATE TABLE Neighbors (
    uidA INT(8) NOT NULL,
    uidB INT(8) NOT NULL,
    nTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (uidA, uidB),
    FOREIGN KEY (uidA) REFERENCES Users (uid) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (uidB) REFERENCES Users (uid) ON DELETE CASCADE ON UPDATE CASCADE);
DROP TABLE IF EXISTS Message;
CREATE TABLE Message (
    msgid INT(8) NOT NULL AUTO_INCREMENT,
    author INT(8) NOT NULL,
    rRange INT(8) DEFAULT 4,
    mtime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    title VARCHAR(50) NOT NULL,
    sub VARCHAR(50) DEFAULT NULL,
    txt VARCHAR(1000) NOT NULL,
    coord VARCHAR(50) DEFAULT NULL,
    PRIMARY KEY (msgid),
    FOREIGN KEY (author) REFERENCES Users (uid) ON DELETE CASCADE ON UPDATE CASCADE);
DROP TABLE IF EXISTS Recipient;
CREATE TABLE Recipient (
    msgid INT(8) NOT NULL,
    uid INT(8) NOT NULL,
    PRIMARY KEY (msgid),
    FOREIGN KEY (msgid) REFERENCES Message (msgid) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (uid) REFERENCES Users (uid) ON DELETE CASCADE ON UPDATE CASCADE);
DROP TABLE IF EXISTS MailBox;
CREATE TABLE MailBox (
    uid INT(8) NOT NULL,
    msgid INT(8) NOT NULL,
    rd BOOL NOT NULL DEFAULT FALSE,
    PRIMARY KEY (uid, msgid),
    FOREIGN KEY (uid) REFERENCES Users (uid) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (msgid) REFERENCES Message (msgid) ON DELETE CASCADE ON UPDATE CASCADE);
DROP TABLE IF EXISTS Reply;
CREATE TABLE Reply (
    msgid INT(8) NOT NULL,
    uid INT(8) NOT NULL,
    rTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    txt VARCHAR(1000) NOT NULL,
    coord VARCHAR(50) DEFAULT NULL,
    PRIMARY KEY (msgid, uid, rTime),
    FOREIGN KEY (msgid) REFERENCES Message (msgid) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (uid) REFERENCES Users (uid) ON DELETE CASCADE ON UPDATE CASCADE);